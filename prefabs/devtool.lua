local assets={	Asset("ANIM", "anim/cane.zip"),Asset("ANIM", "anim/swap_cane.zip"),	Asset("INV_IMAGE","cane"),         	Asset("ANIM", "anim/swap_goldenaxe.zip"),}local function onfinished(inst)    inst:Remove()endlocal function giveitems(inst, data)    if data.owner.components.inventory and data.recipe then      for ik, iv in pairs(data.recipe.ingredients) do            if not data.owner.components.inventory:Has(iv.type, iv.amount) then                for i = 1, iv.amount do                    local item = SpawnPrefab(iv.type)                    assert(item, "Can't spawn ingredient "..tostring(iv.type).." check the recipe for "..tostring(data.recipe.name))                    data.owner.components.inventory:GiveItem(item)                end            end        end    endendlocal function onequipgold(inst, owner)     owner.AnimState:OverrideSymbol("swap_object", "swap_cane",      "swap_cane")         owner.SoundEmitter:PlaySound("dontstarve/wilson/equip_item_gold")         owner.AnimState:Show("ARM_carry")     owner.AnimState:Hide("ARM_normal")     inst.Light:Enable(true)  --inst.task = inst:DoPeriodicTask(0.25, function()       --if owner.components.health then          --owner.components.health:DoDelta(500)      --end      --if owner.components.driver and owner.components.driver.vehicle and owner.components.driver.vehicle.components.boathealth then          --owner.components.driver.vehicle.components.boathealth:DoDelta(500)      --end      --if owner.components.hunger then          --owner.components.hunger:DoDelta(500)      --end  --end)  --owner.components.hunger:SetRate(0)  --owner:ListenForEvent("cantbuild", giveitems)endlocal function onunequip(inst, owner)     inst.Light:Enable(false)    owner.AnimState:Hide("ARM_carry")     owner.AnimState:Show("ARM_normal")   --if inst.task then     -- inst.task:Cancel()      --inst.task = nil  --end  --owner.components.hunger:SetRate(TUNING.WILSON_HUNGER_RATE)  --owner:RemoveEventCallback("cantbuild", giveitems)endlocal function fn(Sim)	local inst = CreateEntity()	local trans = inst.entity:AddTransform()	local anim = inst.entity:AddAnimState()	inst.entity:AddSoundEmitter()MakeInventoryPhysics(inst)MakeInventoryFloatable(inst, "idle_water", "idle"   )anim:SetBank("cane")  anim:SetBuild("cane")anim:PlayAnimation("idle")inst:AddTag("sharp")inst:AddComponent("inspectable")inst:AddComponent("inventoryitem")inst.components.inventoryitem:ChangeImageName("cane")                                             if "dev"=="dev" then inst:AddComponent("weapon")  inst.components.weapon:SetRange(04)     inst.components.weapon:SetDamage(15.0 )     inst.components.weapon:SetProjectile("fire_projectile")                                                                                                                                                                                                                                                                                                                                                                                                                    inst:AddComponent("tool")        inst.components.tool:SetAction(ACTIONS.CHOP,   5)        inst.components.tool:SetAction(ACTIONS.MINE,   5)                                                                                                                                                                               inst.components.tool:SetAction(ACTIONS.HACK,   2)        inst.entity:AddLight()        inst.Light:SetColour(225/255,150/255, 52/255)        inst.Light:SetIntensity(.6)        inst.Light:SetRadius(1)        inst.Light:SetFalloff(.66)                                                                                                                                                                                           inst:AddComponent("equippable")        inst.components.equippable:SetOnEquip( onequipgold )          inst.components.equippable:SetOnUnequip( onunequip)        inst.components.equippable.walkspeedmult = 1.5                           end        return instendreturn Prefab( "common/inventory/devtool", fn, assets)
